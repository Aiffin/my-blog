{"version":3,"sources":["assets/seaImage.jpg","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jambotron.js","components/CommentsList.js","Article-Content.js","ArticleList.js","components/AddCommentForm.js","components/upvotesSection.js","ArticlePage.js","ArticleListPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","About","Contact","NoMatch","Layout","props","Container","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","arisa-controls","Collapse","id","Nav","className","Item","Link","seaImage","Jumbotron","fluid","CommentsList","comments","map","comment","key","username","text","articleContent","name","title","content","ArticleList","articles","article","to","CardGroup","Card","Img","variant","src","Body","Title","substring","AddCommentForm","articleName","setArticleInfo","useState","setUsername","commentText","setCommentText","addComment","a","fetch","method","body","JSON","stringify","headers","result","json","type","value","onChange","event","target","rows","cols","class","onClick","UpvotesSection","upvotes","upvoteArticle","ArticlePage","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","ArticlesListPage","App","Fragment","exact","path","component","ArticleListPage","React","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85466463.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seaImage.18d98af1.jpg\";","import React from 'react'\n\nexport const Home = () => (\n    <div>\n        <h2>\n            Nature\n        </h2>\n        <p>\n        Nature, in the broadest sense, is the natural, physical, or material world or universe. \"Nature\" can refer to the phenomena of the physical world, and also to life in general. The study of nature is a large, if not the only, part of science. Although humans are part of nature, human activity is often understood as a separate category from other natural phenomena.[1]\n\nThe word nature is derived from the Latin word natura, or \"essential qualities, innate disposition\", and in ancient times, literally meant \"birth\".[2] In ancient philosophy, Natura is mostly used as the Latin translation of the Greek word physis (φύσις), which originally related to the intrinsic characteristics that plants, animals, and other features of the world develop of their own accord.[3][4] The concept of nature as a whole, the physical universe, is one of several expansions of the original notion;[1] it began with certain core applications of the word φύσις by pre-Socratic philosophers (though this word had a dynamic dimension then, especially for Heraclitus), and has steadily gained currency ever since. During the advent of modern scientific method in the last several centuries, nature became the passive reality, organized and moved by divine laws.[5][6] With the Industrial revolution, nature increasingly became seen as the part of reality deprived from intentional intervention : it was hence considered as sacred by some traditions (Rousseau, American transcendentalism) or a mere decorum for divine providence or human history (Hegel, Marx). However, a vitalist vision of nature, closer to the presocratic one, got reborn at the same time, especially after Charles Darwin.[1]\n\nWithin the various uses of the word today, \"nature\" often refers to geology and wildlife. Nature can refer to the general realm of living plants and animals, and in some cases to the processes associated with inanimate objects—the way that particular types of things exist and change of their own accord, such as the weather and geology of the Earth. It is often taken to mean the \"natural environment\" or wilderness—wild animals, rocks, forest, and in general those things that have not been substantially altered by human intervention, or which persist despite human intervention. For example, manufactured objects and human interaction generally are not considered part of nature, unless qualified as, for example, \"human nature\" or \"the whole of nature\". This more traditional concept of natural things that can still be found today implies a distinction between the natural and the artificial, with the artificial being understood as that which has been brought into being by a human consciousness or a human mind. Depending on the particular context, the term \"natural\" might also be distinguished from the unnatural or the supernatural.\n<pre>\nWater is a chemical substance that is composed of hydrogen and oxygen (H2O) and is vital for all known forms of life.[29] In typical usage, water refers only to its liquid form or state, but the substance also has a solid state, ice, and a gaseous state, water vapor, or steam. Water covers 71% of the Earth's surface.[30] On Earth, it is found mostly in oceans and other large bodies of water, with 1.6% of water below ground in aquifers and 0.001% in the air as vapor, clouds, and precipitation.[31][32] Oceans hold 97% of surface water, glaciers, and polar ice caps 2.4%, and other land surface water such as rivers, lakes, and ponds 0.6%. Additionally, a minute amount of the Earth's water is contained within biological bodies and manufactured products. \n\n</pre>\n<p>\nWater is a chemical substance that is composed of hydrogen and oxygen (H2O) and is vital for all known forms of life.[29] In typical usage, water refers only to its liquid form or state, but the substance also has a solid state, ice, and a gaseous state, water vapor, or steam. Water covers 71% of the Earth's surface.[30] On Earth, it is found mostly in oceans and other large bodies of water, with 1.6% of water below ground in aquifers and 0.001% in the air as vapor, clouds, and precipitation.[31][32] Oceans hold 97% of surface water, glaciers, and polar ice caps 2.4%, and other land surface water such as rivers, lakes, and ponds 0.6%. Additionally, a minute amount of the Earth's water is contained within biological bodies and manufactured products. \n</p>\n        The Battle of Malvern Hill was fought on July 1, 1862, between the Confederate Army of Northern Virginia, led by Robert E. Lee, and the Union Army of the Potomac under George B. McClellan. It was the final battle of the Seven Days Battles during the American Civil War, taking place on the 130-foot (40 m) elevation of Malvern Hill, near the Confederate capital of Richmond. Including inactive reserves, more than 50,000 soldiers from each side took part, using more than 200 pieces of artillery. The Union's V Corps, commanded by Fitz John Porter, took up positions on the hill on June 30. The battle occurred in stages: over the course of four hours a series of blunders in planning and communication caused Lee's forces to launch three failed frontal infantry assaults across hundreds of yards of open ground, unsupported by Confederate artillery, charging toward strongly entrenched Union infantry and artillery. These errors provided Union forces with an opportunity to inflict heavy casualties\n        </p>\n        <p>meoiwh moew gdhdftshdf dog is kidding</p>\n\n    </div>\n)","import React from 'react'\n\nexport const About = () => (\n    <div>\n        <h2>\n            About Us\n        </h2>\n        <p>\n        The Battle of Malvern Hill was fought on July 1, 1862, between the Confederate Army of Northern Virginia, led by Robert E. Lee, and the Union Army of the Potomac under George B. McClellan. It was the final battle of the Seven Days Battles during the American Civil War, taking place on the 130-foot (40 m) elevation of Malvern Hill, near the Confederate capital of Richmond. Including inactive reserves, more than 50,000 soldiers from each side took part, using more than 200 pieces of artillery. The Union's V Corps, commanded by Fitz John Porter, took up positions on the hill on June 30. The battle occurred in stages: over the course of four hours a series of blunders in planning and communication caused Lee's forces to launch three failed frontal infantry assaults across hundreds of yards of open ground, unsupported by Confederate artillery, charging toward strongly entrenched Union infantry and artillery. These errors provided Union forces with an opportunity to inflict heavy casualties\n        </p>\n        <p>meoiwh moew gdhdftshdf dog is kidding</p>\n\n    </div>\n)","import React from 'react'\n\nexport const Contact = () => (\n    <div>\n        <h2>\n            Contact US\n        </h2>\n        <p>\n            dsgfdgsh how are you doing well react\n        </p>\n        <p>meoiwh moew gdhdftshdf dog is kidding</p>\n\n    </div>\n)","import React from 'react'\n\nexport const NoMatch = () => (\n    <div>\n        <h2>\n            NoMatch\n        </h2>\n\n    </div>\n)","import React from 'react';\nimport {Container } from 'react-bootstrap';\n\nexport const Layout = (props) => (\n    <Container>\n    {props.children} \n    </Container>\n)","import React from 'react';\nimport { Nav,Navbar} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n.navbar{\n    background-color:#222;\n}\n\n.navbar-brand, .navbar-nav .nav-link{\n    color: #bbb;\n&:hover{\n    color:white;\n}\n}\n`;\n\nexport const NavigationBar=()=>(\n    <Styles>\n        <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"\">code life</Navbar.Brand>\n        <Navbar.Toggle arisa-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n        <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/contact\">Contact</Nav.Link></Nav.Item>\n        <Nav.Item><Nav.Link href=\"/articles-list\">Holiday</Nav.Link></Nav.Item>\n        </Nav></Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)","import React from 'react';\nimport {Jumbotron as Jumbo,Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport seaImage from '../assets/seaImage.jpg';\n\nconst Styles = styled.div`\n.jumbo{\n    background:url(${seaImage}) no-repeat fixed bottom;\n    background-size:cover;\n    color:#ccc;\n    height:300px;\n    position:relative;\n    z-index:-2;\n}\n\n.overlay{\n    background-color:#000;\n    opacity:0.3;\n    position:absolute;\n    top:0;\n    left:0;\n    bottom:0;\n    right:0;\n    z-index:-1;\n}`;\n\n\nexport const Jumbotron = () => (\n    <Styles>\n        <Jumbo fluid className=\"jumbo\">\n        <div className=\"overlay\"></div>\n        <Container>\n            <h1>Beauty of Nature</h1>\n            <h2>Time and Tides wait for 'NoNe'</h2>\n            </Container>\n            </Jumbo>\n    </Styles>\n)","import React from \"react\";\n\nconst CommentsList =({comments}) =>(\n    <>\n    <h3>Comment:</h3>\n    {comments.map((comment,key)=>(\n        <div className=\"comment\" key={key}>\n        <h4>{comment.username}</h4>\n        <p>{comment.text}</p></div>\n    ))}\n</>\n)\nexport default CommentsList;","// import React from 'react';\n\nconst articleContent =[\n    {\n        name:'learn-react',\n        title:'The fastest way',\n        content:[\n          \"hello friend natur eis beauty \"\n        \n        ]\n    },\n    {\n        name:'learn-java',\n        title:'Javascript',\n        content:[\n          \"hello friend natur eis beauty \"\n        \n        ]\n    },\n    {\n        name:'dubai',\n        title:'The way',\n        content:[\n          \"hello friend natur eis beauty \"\n        \n        ]\n    }\n]\n\nexport default articleContent;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Card, CardGroup } from 'react-bootstrap';\n\nconst ArticleList =({articles})=>(\n        <div>\n        {articles.map((article,key)=>(\n            <Link key={key} to = {`/article/${article.name}`}>\n            <CardGroup>\n            <Card>\n            <Card.Img variant=\"top\" src=\"\" />\n            <Card.Body>\n            <Card.Title>{article.name}</Card.Title>\n            <p>{article.content[0].substring(0, 150)}...</p>\n            </Card.Body>\n            </Card>\n            </CardGroup>\n            </Link>\n        ))}\n        </div>);\n\nexport default ArticleList;\n    ","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add Comment:</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <br/>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"20\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <br/><br></br>\n            <button class=\"btn btn-primary\" onClick={() => addComment()}>Add Comment</button>\n       <br/><br></br>\n       <hr></hr>\n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvotes`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button class=\"btn btn-primary\" onClick={() => upvoteArticle()}>Add Upvote</button>\n            <br></br><br></br>\n            <p>This post has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React,{ useState,useEffect } from \"react\";\nimport CommentsList from './components/CommentsList';\nimport 'whatwg-fetch';\nimport articleContent from \"./Article-Content\";\nimport ArticleList from \"./ArticleList\";\nimport AddCommentForm from \"./components/AddCommentForm\";\nimport UpvotesSection from \"./components/upvotesSection\";\nimport { NoMatch } from \"./NoMatch\";\n\nexport const ArticlePage=({match})=>{\n   const name = match.params.name;\n\nconst article = articleContent.find(article=>article.name===name)\n\nconst [articleInfo,setArticleInfo] = useState({upvotes:0,comments:[]});\n\nuseEffect(()=>{\n    const fetchData =async () =>{\n        const result= await fetch(`/api/articles/${name}`);\n        const body = await result.json();\n        console.log(body);\n        setArticleInfo(body);\n   \n    }\n    fetchData();\n},[name]);\n\nif(!article) return <NoMatch/>\n\nconst otherArticles = articleContent.filter(article => article.name !== name);\nreturn(\n    <>\n    <h1>{article.title}</h1>\n    {/* <p>This post is upvoted {articleInfo.upvotes} times</p> */}\n    <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n    \n    {article.content.map((paragraph,key)=>(\n        <p key={key}>{paragraph}</p>\n\n    ))}\n    <hr></hr>\n    <CommentsList comments={articleInfo.comments}/>\n    <hr></hr>\n    <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n    <h3>Other Articles:</h3>\n    <ArticleList articles={otherArticles}/>\n    </>\n);\n    }\n\n    export default ArticlePage;\n    ","import React from 'react';\nimport ArticleList from './ArticleList';\nimport articleContent from './Article-Content';\nimport { Card } from 'react-bootstrap';\n// import {Card } from 'react-bootstrap/';\n\n\n const ArticlesListPage = () => (\n    <>\n    <h1>Articles</h1>\n    {/* <Card style={{width:'18em'}}>\n     <Card.Img variant=\"Top\" src=\"\"/>\n      <Card.body> */}\n    <Card>\n    <ArticleList articles={articleContent} />\n    </Card>\n\n    {/* </Card.body>\n            </Card> */}\n   \n    </>\n);\n\nexport default ArticlesListPage;","import React from 'react';\nimport { BrowserRouter as Router,Route,Switch } from 'react-router-dom';\nimport './App.css';\nimport {Home} from './Home';\nimport {About} from './About';\nimport {Contact} from './Contact';\nimport {NoMatch} from './NoMatch';\nimport {Layout} from './components/Layout';\nimport {NavigationBar} from './components/NavigationBar';\nimport {Jumbotron} from './components/Jambotron';\nimport ArticlePage from './ArticlePage';\nimport ArticleListPage from './ArticleListPage';\n\nclass App extends React.Component{\n  render(){\n  return (\n    <React.Fragment>\n      <NavigationBar/>\n      <Jumbotron/>\n      <Layout>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/about' component={About}/>\n          <Route path='/contact' component={Contact}/>\n          <Route path='/articles-list' component={ArticleListPage}/>\n          <Route path='/article/:name' component={ArticlePage}/>\n         \n          <Route component={NoMatch}/>\n        </Switch>\n      </Router>\n      </Layout>\n    </React.Fragment>\n   \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}